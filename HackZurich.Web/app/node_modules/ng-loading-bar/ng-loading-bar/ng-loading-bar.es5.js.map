{"version":3,"file":"ng-loading-bar.es5.js","sources":["~/ng-loading-bar/ng-loading-bar/src/ng-loading-bar.ts","~/ng-loading-bar/ng-loading-bar/src/loading-bar.module.ts","~/ng-loading-bar/ng-loading-bar/src/loading-bar.component.ts","~/ng-loading-bar/ng-loading-bar/src/loading-bar.http.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgLoadingBarModule,NgLoadingBarHttp,NgLoadingBarComponent} from './index';\n\nexport {httpFactory as Éµa} from './loading-bar.module';","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { NgLoadingBarHttp } from './loading-bar.http';\nimport { NgLoadingBarComponent } from './loading-bar.component';\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n    return new NgLoadingBarHttp(xhrBackend, requestOptions);\n}\nexport class NgLoadingBarModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n      return {\n        ngModule: NgLoadingBarModule,\n        providers: [\n            { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n        ],\n      };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [\n        NgLoadingBarComponent,\n    ],\n    imports: [\n        HttpModule,\n    ],\n    exports: [\n        NgLoadingBarComponent,\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgLoadingBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgLoadingBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgLoadingBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Inject, Component, ViewChild, Renderer, AfterViewInit, Input } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { NgLoadingBarHttp } from './loading-bar.http';\nexport class NgLoadingBarComponent implements AfterViewInit {\n     _spinner: any;\n     _loadingBarContainer: any;\n     _loadingBar: any;\n\n     includeSpinner: boolean = true;\nprivate _autoIncrement: boolean = true;\nprivate _includeBar: boolean = true;\nprivate _latencyThreshold: number = 10;\nprivate _startSize: number = 0.02;\nprivate _started: boolean = false;\nprivate _status: number = 0;\nprivate _incTimeout: any;\nprivate _completeTimeout: any;\nprivate _startTimeout: any;\n/**\n * @param {?} _renderer\n * @param {?} http\n */\nconstructor(private _renderer: Renderer,  http: NgLoadingBarHttp) {\n        if (http instanceof NgLoadingBarHttp) {\n            http.pending.subscribe((progress: any) => {\n                if (progress.started) this.start();\n                if (progress.completed) this.complete();\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.hide(this._loadingBarContainer);\n        this.hide(this._spinner);\n    }\n/**\n * Inserts the loading bar element into the dom, and sets it to 2%\n * @return {?}\n */\nprivate start(): void {\n        this._startTimeout = setTimeout(() => {\n\n            clearTimeout(this._completeTimeout);\n\n            // do not continually broadcast the started event:\n            if (this._started) { return; }\n\n            this._started = true;\n            this._status = 0;\n\n            if (this._includeBar) {\n                this.show(this._loadingBarContainer);\n            }\n\n            if (this.includeSpinner) {\n                this.show(this._spinner);\n            }\n\n            this.set(this._startSize);\n        }, this._latencyThreshold);\n    }\n/**\n * Set the loading bar's width to a certain percent.\n * \n * @param {?} n any value between 0 and 1\n * @return {?}\n */\nprivate set(n): void {\n        if (!this._started) { return; }\n        const /** @type {?} */ pct = (n * 100) + '%';\n        this.setElementStyle(this._loadingBar, 'width', pct);\n        this._status = n;\n\n        // increment loadingbar to give the illusion that there is always\n        // progress but make sure to cancel the previous timeouts so we don't\n        // have multiple incs running at the same time.\n        if (this._autoIncrement) {\n            clearTimeout(this._incTimeout);\n            this._incTimeout = setTimeout(() => {\n                this.inc();\n            }, 250);\n        }\n    }\n/**\n * @return {?}\n */\nprivate complete(): void {\n        setTimeout(() => {\n            this.set(1);\n\n            clearTimeout(this._completeTimeout);\n            clearTimeout(this._startTimeout);\n\n            // Attempt to aggregate any start/complete calls within 500ms:\n            this._completeTimeout = setTimeout(() => {\n                this._started = false;\n                this.hide(this._loadingBarContainer);\n                this.hide(this._spinner);\n            }, 500);\n        }, this._latencyThreshold);\n    }\n/**\n * Increments the loading bar by a random amount\n * but slows down as it progresses\n * @return {?}\n */\nprivate inc(): void {\n        if (this._status >= 1) {\n            return;\n        }\n\n        let /** @type {?} */ rnd = 0;\n        let /** @type {?} */ stat = this._status;\n        if (stat >= 0 && stat < 0.25) {\n            // Start out between 3 - 6% increments\n            rnd = (Math.random() * (5 - 3 + 1) + 3) / 100;\n        } else if (stat >= 0.25 && stat < 0.65) {\n            // increment between 0 - 3%\n            rnd = (Math.random() * 3) / 100;\n        } else if (stat >= 0.65 && stat < 0.9) {\n            // increment between 0 - 2%\n            rnd = (Math.random() * 2) / 100;\n        } else if (stat >= 0.9 && stat < 0.99) {\n            // finally, increment it .5 %\n            rnd = 0.005;\n        } else {\n            // after 99%, don't increment:\n            rnd = 0;\n        }\n\n        let /** @type {?} */ pct = this._status + rnd;\n        this.set(pct);\n    }\n/**\n * @param {?} el\n * @return {?}\n */\nprivate show(el: any): void {\n        this.setElementStyle(el, 'display', 'block');\n    }\n/**\n * @param {?} el\n * @return {?}\n */\nprivate hide(el: any): void {\n        this.setElementStyle(el, 'display', 'none');\n    }\n/**\n * @param {?} el\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nprivate setElementStyle(el: any, styleName: string, styleValue: string): void {\n        this._renderer.setElementStyle(el.nativeElement, styleName, styleValue);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ng-loading-bar',\n    template: `\n        <div id=\"loading-bar-spinner\" #loadingBarSpinner><div class=\"spinner-icon\"></div></div>\n        <div id=\"loading-bar\" #loadingBarContainer><div class=\"bar\" #loadingBar><div class=\"peg\"></div></div></div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: NgLoadingBarHttp, decorators: [{ type: Inject, args: [Http, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_spinner': [{ type: ViewChild, args: ['loadingBarSpinner', ] },],\n'_loadingBarContainer': [{ type: ViewChild, args: ['loadingBarContainer', ] },],\n'_loadingBar': [{ type: ViewChild, args: ['loadingBar', ] },],\n'includeSpinner': [{ type: Input },],\n};\n}\n\nfunction NgLoadingBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgLoadingBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgLoadingBarComponent.ctorParameters;\n/** @type {?} */\nNgLoadingBarComponent.propDecorators;\n/** @type {?} */\nNgLoadingBarComponent.prototype._spinner;\n/** @type {?} */\nNgLoadingBarComponent.prototype._loadingBarContainer;\n/** @type {?} */\nNgLoadingBarComponent.prototype._loadingBar;\n/** @type {?} */\nNgLoadingBarComponent.prototype.includeSpinner;\n/** @type {?} */\nNgLoadingBarComponent.prototype._autoIncrement;\n/** @type {?} */\nNgLoadingBarComponent.prototype._includeBar;\n/** @type {?} */\nNgLoadingBarComponent.prototype._latencyThreshold;\n/** @type {?} */\nNgLoadingBarComponent.prototype._startSize;\n/** @type {?} */\nNgLoadingBarComponent.prototype._started;\n/** @type {?} */\nNgLoadingBarComponent.prototype._status;\n/** @type {?} */\nNgLoadingBarComponent.prototype._incTimeout;\n/** @type {?} */\nNgLoadingBarComponent.prototype._completeTimeout;\n/** @type {?} */\nNgLoadingBarComponent.prototype._startTimeout;\n/** @type {?} */\nNgLoadingBarComponent.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injector } from '@angular/core';\nimport { Http, Request, Response, RequestOptionsArgs } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/share';\n\nexport interface LoadingBarRequestOptionsArgs extends RequestOptionsArgs {\n    ignoreLoadingBar?: boolean;\n}\nexport class NgLoadingBarHttp extends Http {\n    pending = new Subject();\nprivate _pendingRequests: number = 0;\n/**\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nrequest(url: string|Request, options?: LoadingBarRequestOptionsArgs): Observable<Response> {\n        const /** @type {?} */ response = super.request(url, options).share();\n        if (options && options.ignoreLoadingBar === true) {\n            return response;\n        }\n\n        this.requestStarted();\n        response.subscribe(\n            (x) => {},\n            (err) => this.requestEnded(),\n            () => this.requestEnded(),\n        );\n\n        return response;\n    }\n/**\n * @return {?}\n */\nprivate requestStarted() {\n        this.pending.next({\n            started: this._pendingRequests === 0,\n            pendingRequests: ++this._pendingRequests,\n        });\n    }\n/**\n * @return {?}\n */\nprivate requestEnded() {\n        this.pending.next({\n            completed: this._pendingRequests === 1,\n            pendingRequests: --this._pendingRequests,\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgLoadingBarHttp_tsickle_Closure_declarations() {\n/** @type {?} */\nNgLoadingBarHttp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgLoadingBarHttp.ctorParameters;\n/** @type {?} */\nNgLoadingBarHttp.prototype.pending;\n/** @type {?} */\nNgLoadingBarHttp.prototype._pendingRequests;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}